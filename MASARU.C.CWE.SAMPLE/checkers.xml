<checkers version="1.3">
    <categories>
        <category name="C and C++">
            <category name="Sample Custom CWE checkers">
                <error id="MASARU.C.CWE243.SAMPLE"/>
                <error id="MASARU.C.CWE831.SAMPLE"/>
            </category>
        </category>
    </categories>

    <checkergroup language="C/C++" api="tree_pattern">
        <checker id="MASARU.C.CWE243.SAMPLE">
            <error id="MASARU.C.CWE243.SAMPLE"
                   enabled="true"
                   severity="4"
                   title="chdir(&quot;/&quot;) should be called after chroot() before file operation"
                   message="chdir(&quot;/&quot;) should be called after chroot() before file operation">
                <pattern>
                    //ExprStmt[Expr::CallExpr[getName() = 'chroot']]
    [not following-sibling::ExprStmt/Expr::CallExpr
        [getName()='chdir']
        [Args[*]::StringLiteralExpr[@Value = '/']]
    ]
    [following-sibling::*/descendant::CallExpr
        [getName()='fopen' | getName()='open']
    ]
                </pattern>
            </error>
        </checker>
        <checker id="MASARU.C.CWE831.SAMPLE">
            <error id="MASARU.C.CWE831.SAMPLE"
                   enabled="true"
                   severity="4"
                   title="same signal handler function with two different signals for signal()"
                   message="same signal handler function with two different signals for signal()">
                <pattern>
//ExprStmt
    [Expr::CallExpr[getName() = 'signal']
        [Args[0]::LiteralExpr[$firstEvent:=@Value]]
        [Args[1]::IdExpr[$firstHandler:=getName()]]
    ]
    [following-sibling::ExprStmt/Expr::CallExpr
        [getName()='signal']
        [Args[0]::LiteralExpr[$secondEvent:=@Value]]
        [Args[1]::IdExpr[$secondHandler:=getName()]]
        [$firstEvent != $secondEvent]
        [$firstHandler = $secondHandler]
    ]
    
                </pattern>
            </error>
        </checker>
    </checkergroup>
</checkers>

